services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: email_filter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENV=development
      - API_SECRET=lkaljkdlasjd
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=email_filter
      - DB_PORT=5432
      - DB_SSLMODE=disable
      - EMAIL_SERVER=imap.gmail.com
      - EMAIL_PORT=993
      - EMAIL_USERNAME=appspidersense@gmail.com
      - EMAIL_PASSWORD=ugqeynsmbzadptjg
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FREE_PLAN_EMAIL_LIMIT=100
      - FREE_PLAN_STORAGE_DAYS=30
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8080
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
