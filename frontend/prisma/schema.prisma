generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Optional: Used for migrations
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  password_hash String
  role         String
  tenant_id    String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  tenant       Tenant   @relation(fields: [tenant_id], references: [id])

  @@map("users")
}

model Tenant {
  id         String   @id @default(uuid())
  name       String
  plan       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]
  emails     Email[]
  tasks      Task[]

  @@map("tenants")
}

model Email {
  id           String   @id @default(uuid())
  tenant_id    String
  subject      String
  body         String
  sender       String
  recipient    String
  priority     String
  category     String
  labels       String[] @default([])
  processed_at DateTime @default(now())
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  tenant       Tenant   @relation(fields: [tenant_id], references: [id])
  tasks        Task[]

  @@map("emails")
}

model Task {
  id          String   @id @default(uuid())
  email_id    String
  tenant_id   String
  title       String
  description String
  priority    String
  status      String   @default("pending")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  email       Email    @relation(fields: [email_id], references: [id])
  tenant      Tenant   @relation(fields: [tenant_id], references: [id])

  @@map("tasks")
}
